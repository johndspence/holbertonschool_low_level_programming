#include <unistd.h>
#include <stdio.h>
/* We are not inside of init
 * and we start our shell
 */
int main(int argc, char **argv, char **env)
{
    shell loop
          display prompt
          read_line: read from std input when user presses enter
            malloc
            free
          string_split: parse standard input
            return (pointer?) to array of strings(tokens) looks like strtok
            function compare to names of builtin functions and return match or
            error if no match
          execute builtin or user-created: execute from standard input
            fork
              execvp (or execvp??)
                run child function from several builtin options or those that the
                user creates
              wait
              store status on variable $?
              return to shell loop prompt based on status of execute child function

    exit shell loop when execute function tells you to

end of main
}


Files and to do
// promt function
// search environmental PATH and find a match
// main ("we" start this)
// provided static library
// ur own library
// Makefile
// read input function
// parse input function
// execute function

// env function (parameters passed from parent?)
// exit function
// free malloc on stringsplit and read_line

//valgrind
//test to see if static library has functions
// ask again about do not relink
